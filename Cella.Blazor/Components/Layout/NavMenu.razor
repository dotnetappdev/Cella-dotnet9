@implements IDisposable
@using Cella.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<ApplicationUser> SignInManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Cella.Blazor</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>
        
        <AuthorizeView>
            <Authorized>

               </Authorized>
               </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    Admin
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/admin/stock">
                            <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Stock Listings
                        </NavLink>
                        
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/admin/Stock/list">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Add Stock
                            </NavLink>
                        </div>
                        
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/admin/weighbridge">
                                <span class="bi bi-truck-nav-menu" aria-hidden="true"></span> Weigh Bridge
                            </NavLink>
                        </div>
                        
                    </div>

                    <form action="Account/Logout" method="post" @onsubmit="Logout">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/products">
                        <span class="bi bi-bag-nav-menu" aria-hidden="true"></span> Products
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/basket">
                        <span class="bi bi-cart-nav-menu" aria-hidden="true"></span> Basket
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/drivers/manage">
                        <span class="bi bi-truck-nav-menu" aria-hidden="true"></span> Manage Drivers
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/routes/manage">
                        <span class="bi bi-geo-alt-nav-menu" aria-hidden="true"></span> Manage Routes
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/salesorders/manage">
                        <span class="bi bi-receipt-nav-menu" aria-hidden="true"></span> Manage Sales Orders
                    </NavLink>
                </div>
                <AuthorizeView Roles="Customer">
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/customer/dashboard">
                            <span class="bi bi-person-lines-fill-nav-menu" aria-hidden="true"></span> My Dashboard
                        </NavLink>
                    </div>
                </AuthorizeView>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    private AuthenticationState? currentAuthState;

    protected override async Task OnInitializedAsync()
    {
        // Initialize the current authentication state
        currentAuthState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private async Task Logout()
    {
        // Call SignOutAsync to log the user out
        await SignInManager.SignOutAsync();

        // Force a state update to reflect changes after logout
        StateHasChanged();

        // Navigate to home or login page after logout
        NavigationManager.NavigateTo("/");
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
