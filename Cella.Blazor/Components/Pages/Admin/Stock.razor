@page "/admin/stock"
@layout AdminLayout
@using Cella.Models
@inject HttpClient Http

<h3>Manage Stock</h3>

<button class="btn btn-success mb-3" @onclick="ShowAddModal">Add Stock Item</button>

@if (stockItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Stock Code</th>
                <th>Name</th>
                <th>Qty</th>
                <th>Location</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in stockItems)
            {
                <tr>
                    <td>@item.StockCode</td>
                    <td>@item.Name</td>
                    <td>@item.Qty</td>
                    <td>@item.WarehouseLocation</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-1" @onclick="() => EditItem(item)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteItem(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<EditForm Model="editItem" OnValidSubmit="SaveItem">
    <Modal @bind-Visible="showModal">
        <ModalHeader>@(editItem.Id == 0 ? "Add Stock Item" : "Edit Stock Item")</ModalHeader>
        <ModalBody>
            <div class="mb-2">
                <label>Stock Code</label>
                <InputText class="form-control" @bind-Value="editItem.StockCode" />
            </div>
            <div class="mb-2">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="editItem.Name" />
            </div>
            <div class="mb-2">
                <label>Qty</label>
                <InputNumber class="form-control" @bind-Value="editItem.Qty" />
            </div>
            <div class="mb-2">
                <label>Warehouse Location</label>
                <InputText class="form-control" @bind-Value="editItem.WarehouseLocation" />
            </div>
        </ModalBody>
        <ModalFooter>
            <button class="btn btn-primary" type="submit">Save</button>
            <button class="btn btn-secondary" type="button" @onclick="() => showModal = false">Cancel</button>
        </ModalFooter>
    </Modal>
</EditForm>

@code {
    private List<StockItem> stockItems;
    private StockItem editItem = new StockItem();
    private bool showModal = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadStock();
    }
    private async Task LoadStock()
    {
        stockItems = await Http.GetFromJsonAsync<List<StockItem>>("api/stockitems");
    }
    private void ShowAddModal()
    {
        editItem = new StockItem();
        showModal = true;
    }
    private void EditItem(StockItem item)
    {
        editItem = new StockItem
        {
            Id = item.Id,
            StockCode = item.StockCode,
            Name = item.Name,
            Qty = item.Qty,
            WarehouseLocation = item.WarehouseLocation
        };
        showModal = true;
    }
    private async Task SaveItem()
    {
        if (editItem.Id == 0)
            await Http.PostAsJsonAsync("api/stockitems", editItem);
        else
            await Http.PutAsJsonAsync($"api/stockitems/{editItem.Id}", editItem);
        showModal = false;
        await LoadStock();
    }
    private async Task DeleteItem(int id)
    {
        await Http.DeleteAsync($"api/stockitems/{id}");
        await LoadStock();
    }
}
